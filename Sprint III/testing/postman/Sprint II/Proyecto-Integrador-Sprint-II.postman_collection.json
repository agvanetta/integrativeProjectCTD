{
	"info": {
		"_postman_id": "c24244a3-886f-42c9-b5a2-c0f472f44f87",
		"name": "Proyecto-Integrador-Sprint-II",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18029196"
	},
	"item": [
		{
			"name": "API CategorÃ­as",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"categoriesId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Hoteles\",\r\n    \"description\": \"Hoteles varios\",\r\n    \"imgUrl\": \"hoteles.com.test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}categorias",
							"host": [
								"{{URL}}categorias"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// API Status\r",
									"pm.test(\"Categories load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200); // validar que nos devuelva un 200\r",
									"    pm.response.to.be.withBody; // validar que exista el body\r",
									"    pm.response.to.be.json; // validar que sea JSON\r",
									"    pm.response.to.be.an(\"object\"); // validar que sea un objeto\r",
									"});\r",
									"\r",
									"// API Find all\r",
									"const jsonData = pm.response.json();\r",
									"const cat = jsonData[0];\r",
									"\r",
									"let schema = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\"$ref\": \"categoriesSchema\"}\r",
									"};\r",
									"\r",
									"let categoriesSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"title\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"imgUrl\": {\"type\": \"string\"}\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('categoriesSchema', categoriesSchema);\r",
									"\r",
									"pm.test(\"Categories schema is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}categorias/list",
							"host": [
								"{{URL}}categorias"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful UPDATE request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"categoriesId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{categoriesId}},\r\n    \"title\": \"Departamentos\",\r\n    \"description\": \"Departamentos varios\",\r\n    \"imgUrl\": \"departamentos.com.test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}categorias/update",
							"host": [
								"{{URL}}categorias"
							],
							"path": [
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}categorias/:id",
							"host": [
								"{{URL}}categorias"
							],
							"path": [
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{categoriesId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Productos",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"productsId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Hotel hotel\",\r\n    \"title\":\"El lujo hecho hotel\",\r\n    \"description\": \"El hotel pp ddjdksjfhjkdsf ksjfhkdsjfh sfdhskjfhksdjf sdkfhsdjkfskf\",\r\n    \"categoria\": {\"id\":2},\r\n    \"caracteristica\": {\r\n        \"kitchen\": true,\r\n        \"tv\": true,\r\n        \"airConditioning\": true,\r\n        \"petsAllowed\": false,\r\n        \"freeParking\": false,\r\n        \"pool\": false,\r\n        \"wifi\": true\r\n    },\r\n    \"ciudad\": {\"id\":1},\r\n    \"imagen\": [{\"title\": \"principal\",\r\n            \"url\": \"https://t-cf.bstatic.com/xdata/images/hotel/max1280x900/335987727.jpg?k=ff98973c73771384f41682fb6d9928d5cb695544fc0aac21c95485129a5a1579&o=&hp=1\"}],\r\n    \"reserva\": [\r\n        {\r\n            \"horaComienzo\": \"15:00:00\",\r\n            \"fechaInicio\": \"2022-12-03\",\r\n            \"fechaFin\": \"2022-12-05\"\r\n        },\r\n        {\r\n            \"horaComienzo\": \"16:00:00\",\r\n            \"fechaInicio\": \"2021-12-03\",\r\n            \"fechaFin\": \"2023-12-05\"\r\n        }\r\n    ],\r\n    \"domicilio\": \"pepejuancho\",\r\n    \"latitud\": \"pepe\",\r\n    \"longitud\":\"pepito\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}productos",
							"host": [
								"{{URL}}productos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}productos/:id",
							"host": [
								"{{URL}}productos"
							],
							"path": [
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{productsId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"const prod = jsonData[0];\r",
									"\r",
									"let schema = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\"$ref\": \"productoSchema\"}\r",
									"};\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}productos/list",
							"host": [
								"{{URL}}productos"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 45,\r\n    \"name\": \"Hotel pepe\",\r\n    \"title\": \"titulo Hotel\",\r\n    \"description\": \"El hotel de don pepe\",\r\n    \"categoria\": {\"id\":1},\r\n    \"caracteristica\": {\r\n        \"kitchen\": true,\r\n        \"tv\": false,\r\n        \"airConditioning\": true,\r\n        \"petsAllowed\": false,\r\n        \"freeParking\": false,\r\n        \"pool\": false,\r\n        \"wifi\": true\r\n    },\r\n    \"ciudad\": {\"id\":1},\r\n    \"imagen\": [\r\n        {\r\n            \"title\":\"1\", \r\n            \"url\": \"www.pepe.com\"\r\n        },\r\n        {\r\n            \"title\":\"pepe2\", \r\n            \"url\": \"www.pepe2.com\"\r\n        }\r\n    ],\r\n    \"reserva\": [\r\n        {\r\n            \"horaComienzo\": \"15:00:00\",\r\n            \"fechaInicio\": \"2022-12-03\",\r\n            \"fechaFin\": \"2022-12-05\"\r\n        },\r\n        {\r\n            \"horaComienzo\": \"16:00:00\",\r\n            \"fechaInicio\": \"2021-12-03\",\r\n            \"fechaFin\": \"2023-12-05\"\r\n        }\r\n    ],\r\n    \"domicilio\": \"pepe\",\r\n    \"latitud\": \"pepito\",\r\n    \"longitud\":\"juancho\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}productos/update",
							"host": [
								"{{URL}}productos"
							],
							"path": [
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find By City And Between Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}productos/CÃ³rdoba/2022-01-12/2022-01-12",
							"host": [
								"{{URL}}productos"
							],
							"path": [
								"CÃ³rdoba",
								"2022-01-12",
								"2022-01-12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find All Random",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"const prod = jsonData[0];\r",
									"\r",
									"let schema = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\"$ref\": \"productoSchema\"}\r",
									"};\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}productos/page",
							"host": [
								"{{URL}}productos"
							],
							"path": [
								"page"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Imagenes",
			"item": [
				{
					"name": "Find All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"const prod = jsonData[0];\r",
									"\r",
									"let schema = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\"$ref\": \"productoSchema\"}\r",
									"};\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"title\": {\"type\": \"string\"},\r",
									"        \"url\": {\"type\": \"string\"},\r",
									"        \"producto\":{\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"name\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"categoria\": {\r",
									"                \"id\": {\"type\": \"integer\"},\r",
									"                \"title\": {\"type\": \"string\"},\r",
									"                \"description\": {\"type\": \"string\"},\r",
									"                \"imgUrl\": {\"type\": \"string\"}\r",
									"            },\r",
									"            \"caracteristica\": {\r",
									"                \"id\": {\"type\": \"integer\"},\r",
									"                \"kitchen\": {\"type\": \"boolean\"},\r",
									"                \"tv\": {\"type\": \"boolean\"},\r",
									"                \"airConditioning\": {\"type\": \"boolean\"},\r",
									"                \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"                \"freeParking\": {\"type\": \"boolean\"},\r",
									"                \"pool\": {\"type\": \"boolean\"},\r",
									"                \"wifi\": {\"type\": \"boolean\"}\r",
									"            },\r",
									"            \"ciudad\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"city\": {\"type\": \"string\"},\r",
									"                \"pais\": {\r",
									"                    \"id\": {\"type\": \"long\"},\r",
									"                    \"pais\": {\"type\": \"string\"}\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}imagenes/list",
							"host": [
								"{{URL}}imagenes"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Usuarios",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Lionel\",\r\n    \"apellido\": \"Messi\",\r\n    \"email\": \"lionel.messi@gmail.com\",\r\n    \"contraseÃ±a\": \"grupo\",\r\n    \"ciudad\": \"Santa Fe\",\r\n    \"roles\": {\"id\":2}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}usuarios/registrar",
							"host": [
								"{{URL}}usuarios"
							],
							"path": [
								"registrar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}usuarios/list",
							"host": [
								"{{URL}}usuarios"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"lionel.messi@gmail.com\",\r\n    \"contraseÃ±a\": \"grupo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}usuarios/login",
							"host": [
								"{{URL}}usuarios"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Reservas",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsaW9uZWwubWVzc2lAZ21haWwuY29tIiwiaWF0IjoxNjU1NDEwNzgzLCJleHAiOjE2NTU0MTQzODN9._SHJQGYshMW4qSrrZnm9C9eqFluYnlhSvA3TDBooty-rNA18fpca_S6sMirDbBXp83I-iO8W7KPnbqosZqhtfA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"horaComienzo\": \"19:00:00\",\r\n    \"fechaInicio\": \"2022-12-03\",\r\n    \"fechaFin\": \"2022-12-05\",\r\n    \"producto\": {\"id\":1},\r\n    \"usuario\": {\"id\":1}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}reservas",
							"host": [
								"{{URL}}reservas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}reservas/list",
							"host": [
								"{{URL}}reservas"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find By Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}reservas/productos/1",
							"host": [
								"{{URL}}reservas"
							],
							"path": [
								"productos",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find By User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Products load must be valid and have a body\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.an(\"object\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"let productoSchema = {\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"description\": {\"type\": \"string\"},\r",
									"        \"categoria\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"title\": {\"type\": \"string\"},\r",
									"            \"description\": {\"type\": \"string\"},\r",
									"            \"imgUrl\": {\"type\": \"string\"}\r",
									"        },\r",
									"        \"caracteristica\": {\r",
									"            \"id\": {\"type\": \"integer\"},\r",
									"            \"kitchen\": {\"type\": \"boolean\"},\r",
									"            \"tv\": {\"type\": \"boolean\"},\r",
									"            \"airConditioning\": {\"type\": \"boolean\"},\r",
									"            \"petsAllowed\": {\"type\": \"boolean\"},\r",
									"            \"freeParking\": {\"type\": \"boolean\"},\r",
									"            \"pool\": {\"type\": \"boolean\"},\r",
									"            \"wifi\": {\"type\": \"boolean\"}\r",
									"        },\r",
									"        \"ciudad\": {\r",
									"            \"id\": {\"type\": \"long\"},\r",
									"            \"city\": {\"type\": \"string\"},\r",
									"            \"pais\": {\r",
									"                \"id\": {\"type\": \"long\"},\r",
									"                \"pais\": {\"type\": \"string\"}\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"tv4.addSchema('productoSchema', productoSchema);\r",
									"\r",
									"pm.test(\"Products schemas is valid\", () => {\r",
									"    pm.expect(tv4.validate(jsonData, productoSchema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}reservas/usuarios/1",
							"host": [
								"{{URL}}reservas"
							],
							"path": [
								"usuarios",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Puntuacion",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsaW9uZWwubWVzc2lAZ21haWwuY29tIiwiaWF0IjoxNjU1Nzc1NzU4LCJleHAiOjE2NTU3NzkzNTgsImlkIjoyLCJub21icmUiOiJMaW9uZWwiLCJhcGVsbGlkbyI6Ik1lc3NpIn0.94IXkZzwepwzyypkDAlDv2A8vOZHD2c__vHDTy5Dqb32b63yI3BJ7wh2sosdMoj-QWm7JUjw2ouxWVNMi2TCfg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"puntuacion\": 2.0,\r\n    \"usuario\": {\"id\":1},\r\n    \"productos\": {\"id\":1}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}puntuaciones",
							"host": [
								"{{URL}}puntuaciones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}puntuaciones/list",
							"host": [
								"{{URL}}puntuaciones"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:8080/",
			"type": "string"
		}
	]
}